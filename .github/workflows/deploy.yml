name: "CorpX Docu Deployment"

on:
  push:
    branches:
      - main
    paths-ignore:
      - ".gitignore"
      - "README.md"
      - "CONTRIBUTING.md"
      - "LICENSE"
  pull_request:
    branches:
      - main
    types:
      - opened
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    env:
      URL_CHECKER_TIMEOUT: 30
    steps:
      - name: "Checkout the repository"
        uses: actions/checkout@v4

      - name: "Setup Node"
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: "Cache Node"
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: "Install dependencies"
        run: npm ci --ignore-scripts
        continue-on-error: false

      - name: "Run all the linters"
        run: npm run lint:all
        continue-on-error: false

      - name: "Run Scripts"
        run: node script/url-checker.js -t ${{ env.URL_CHECKER_TIMEOUT }}
        continue-on-error: false
  build:
    runs-on: ubuntu-latest
    needs: test
    env:
      PATH_PREFIX: "/cd13461-github-actions-project-starter/"
    steps:
      - name: "Checkout the repository"
        uses: actions/checkout@v4

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v4

      - name: "Setup Node"
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: "Cache Node"
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: "Install dependencies"
        run: npm ci --ignore-scripts
        continue-on-error: false

      - name: Rebuild sharp
        run: npm rebuild sharp --verbose
        continue-on-error: false

      - name: Add pagefind v1 (no-save)
        run: npm i --no-save pagefind@^1
      
      #- name: "Build site"
      #  run: |
      #    PathPrefix="/$(echo "${{ github.repository }}" | cut -d '/' -f2-)/"
      #    echo "PATH_PREFIX=$PathPrefix" >> $GITHUB_ENV
      
      - name: "Build site"
        run: npm run prod

      - name: Remove symlinks (Pages requirement)
        run: |
          find _site -type l -delete
    
      - name: "Upload Artifacts"
        #uses: actions/upload-artifact@v4
        uses: actions/upload-pages-artifact@v3
        with:
          name: sites
          path: _site/

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      pages: write
      id-token: write
      issues: write

    steps:
      - name: "Checkout the repository"
        uses: actions/checkout@v4
        
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: sites

      - name: Authenticate GitHub CLI
        run: gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"

      - name: Create deployment status issue
        run: |
          date=$(date +'%Y-%m-%d')
          status="succeeded"
          if [[ "${{ job.status }}" != "success" ]]; then
            status="failed"
          fi
          url="${{ steps.deployment.outputs.page_url }}"
          gh issue create --title "$date - Deployment: $status" --body "URL: $url"
