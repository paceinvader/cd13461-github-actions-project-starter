name: "CorpX Docu Deployment"

on:
  push:
    branches:
      - main
    paths-ignore:
      - ".gitignore"
      - "README.md"
      - "CONTRIBUTING.md"
      - "LICENSE"
  pull_request:
    branches:
      - main
    types:
      - opened
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    env:
      URL_CHECKER_TIMEOUT: 30
    steps:
      - name: "Checkout the repository"
        uses: actions/checkout@v4

      - name: "Setup Node"
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: "Cache Node"
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: "Install dependencies"
        run: npm ci --ignore-scripts
        continue-on-error: false

      - name: "Run all the linters"
        run: npm run lint:all
        continue-on-error: false

      - name: "Run Scripts"
        run: node script/url-checker.js -t ${{ env.URL_CHECKER_TIMEOUT }}
        continue-on-error: false
  build:
    runs-on: ubuntu-latest
    needs: test
    #env:
    #  PATH_PREFIX: "/cd13461-github-actions-project-starter/"
    steps:
      - name: "Checkout the repository"
        uses: actions/checkout@v4

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v4

      - name: "Setup Node"
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: "Cache Node"
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: "Install dependencies"
        run: |
          npm ci --ignore-scripts
          npm rebuild sharp --verbose
          npm i --no-save pagefind@^1
        continue-on-error: false

      - name: "Set Path Prefix"
        run: |
          PathPrefix="/$(echo "${{ github.repository }}" | cut -d '/' -f2-)/"
          echo "PATH_PREFIX=$PathPrefix" >> $GITHUB_ENV
      
      - name: "Build site"
        run: npm run prod
        continue-on-error: false
    
      - name: "Upload Artifacts"
        uses: actions/upload-pages-artifact@v3
        with:
          name: sites
          path: _site/

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      pages: write
      id-token: write
      issues: write

    steps:
      - name: "Checkout the repository"
        uses: actions/checkout@v4
        
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: sites

      - name: Create deployment status issue
        if: always()
        run: |
          gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}" 
          DATE=$(date +'%Y-%m-%d')
          
          if [[ "${{ job.status }}" = "success" ]]; then
            status="succeeded"
          else
            status="failed"
          fi
          url="${{ steps.deployment.outputs.page_url }}"
          gh issue create \ 
            --title "Doc Deployment $status ($date)" \
            --body "Run Number: ${{github.run_id}} \nURL: $url" \
            --label "deployment-status" \
            --repo "${{ github.repository}}"
